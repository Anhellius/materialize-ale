html, body {
    height:100%;
    padding:0;
    margin:0;
}
 
main {
    flex: 1 0 auto;
}

nav {
    .nav-header{
            clear: both;
            padding: 40px 0;
            line-height: 1.5;
            overflow-y: auto;
    }
    &.nav-full-header {
    height: 100% !important;
        .nav-header{
            height: calc(100% - 128px);
            height: -moz-calc(100% - (128px));
            height: -webkit-calc(100% - (128px));
            height: calc(100% - (128px));
            display:block            
        }
    }
	position: relative;
    top: 0;
    transition: background-color .3s, opacity .2s, visibility 0s;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);
    z-index: 10;
	.nav-background {
    overflow: hidden;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    opacity: .2;
        .ea{
       	top: 0;
        bottom: 0;
        // -webkit-transform: none;
        transform: none;
        background-repeat: repeat;
        position: absolute;
        right: 0;
        left: 0;
        margin: 0 auto;
        max-width: 100%;
        // filter: grayscale(20%);
        transition: opacity .7s;    
            &.k{
            	opacity: 1;
            }
        }
    }
    .categories-wrapper {
    background-color: transparent;
    height: 64px;
}
}
.valign-wrapper {
    height: 100%;
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    line-height: 1.5;
}

.circle {
    border-radius: 50%;
}

@function convert-angle($value, $unit) {
  $convertable-units: deg grad turn rad;
  $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
    @return $value
             / nth($conversion-factors, index($convertable-units, unit($value)))
             * nth($conversion-factors, index($convertable-units, $unit));
  }
  
  @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// Test if `$value` is an angle
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));
  
  @return $is-direction or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
  }
  
  $conversion-map: ( 
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );
    
  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }
  
  @return 90deg - convert-angle($value, 'deg');
}

/// Mixin printing a linear-gradient 
/// as well as a plain color fallback 
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {String | List | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }
  
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// Tests
.test-1 {
  @include linear-gradient(#31B7D7, #EDAC7D);
}

.test-2 {
  @include linear-gradient(to right, #E47D7D 0%, #C195D3 50%, #4FB4E8 100%);
}

.test-3 {
  @include linear-gradient(65deg, #263238 0%, #263238 50%, transparent 50.01%);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    @media #{$small-and-down} {
        @include linear-gradient(70deg, #263238 0%, #263238 46%, transparent 45.01%);
    }

}

.test-4 {
  @include linear-gradient(-15deg, #37474f 0%, #37474f 20%,  transparent 20.01%);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    @media #{$small-and-down} {
        @include linear-gradient(-10deg, #37474f 0%, #37474f 20%,  transparent 20.01%);
    }    
}

.background {
    background:url('../imagenes/background-multi-1.jpg');
    position: relative;
    width: 100%;
}

.layer {
    background-color: rgba(25, 33, 36, .2);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
}


.element-1 {   
    position: absolute;
    top: 0;
    left: 0;
    background-color: #263238;   
    color: white;
    width: 100%; 
    height: 100%;
    // margin: 30px auto;
    text-align: justify;
    shape-inside: polygon(0 0,  41.5% 0, 61% 100%, 0 100%);
    // shape-padding: 20px;
    transition: all .5s ease; 
    -webkit-clip-path: polygon(0 0,  41.5% 0, 61% 100%, 0 100%);
    z-index: -1;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
} 
.element-1-change {
  shape-inside: polygon(0 0,  41.5% 0, 41.5% 100%, 0 100%);
  -webkit-clip-path: polygon(0 0,  41.5% 0, 45% 100%, 0 100%);
 /* shape-inside: circle(50%, 50%, 50%);
  -webkit-clip-path: circle(50%, 50%, 50%); */
  transition: all .5s ease;     
  z-index: -1;
}
.element-1-change2 {
  shape-inside: polygon(0 0,  0 0, 0 100%, 0 100%);
  -webkit-clip-path: polygon(0 0,  0 0, 0 100%, 0 100%);
  /* shape-inside: circle(50%, 50%, 50%);
   -webkit-clip-path: circle(50%, 50%, 50%); */
  transition: all .5s ease;
  z-index: -1;
}

.element-2 {
    position: absolute;
    top: 0;
    left: 0;   
    background-color: #37474f;   
    color: white;
    width: 100%; 
    height: 100%;
    // margin: 30px auto;
    text-align: justify;
    shape-inside: polygon(100% 0,  100% 80%, 45% 100%, 100% 100%);
    // shape-padding: 20px;
    transition: all .5s ease; 
    -webkit-clip-path: polygon(100% 0, 100% 80%, 45% 100%, 100% 100%);
    z-index: -1;
} 
.element-2-change {
    shape-inside: polygon(100% 0,  41.4% 0, 41.4% 100%, 100% 100%);
    -webkit-clip-path: polygon(100% 0, 41.4% 0, 41.4% 100%, 100% 100%);
    /* shape-inside: circle(50%, 50%, 50%);
    -webkit-clip-path: circle(50%, 50%, 50%); */
    z-index: -1;
    transition: all .5s ease;       
    background-color: #eceff1; 
}
.element-2-change2 {
  shape-inside: polygon(100% 0,  0 0, 0 100%, 100% 100%);
  -webkit-clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  /* shape-inside: circle(50%, 50%, 50%);
  -webkit-clip-path: circle(50%, 50%, 50%); */
  z-index: -1;
  transition: all .5s ease;
  background-color: #eceff1;
  background-image: url("../imagenes/background-multi-1-blur.jpg");
  opacity: 1;
  backdrop-filter: blur(5px);
  &.tinted{
    background-image:(linear-gradient(0deg, rgba(255,255,255,.2),rgba(255,255,255,.2)),url(../imagenes/background-multi-1-blur.jpg));
  }
  &.shaded{
    background-image:(linear-gradient(0deg, rgba(0,0,0,.2),rgba(0,0,0,.2)),url(../imagenes/background-multi-1-blur.jpg));
  }
}


.scrollText{
   // display: block;
   // position:fixed;
   // top:100px;
   // bottom:100px;
   // width:38.5%;
   // overflow-y:auto;
   height: 470px;
   width: 100%;
   overflow: auto;  
   padding-right: 20px;
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {
  ::-webkit-scrollbar {
      width:  $size;
      height: $size;
  }

  ::-webkit-scrollbar-thumb {
      background: $foreground-color;
  }

  ::-webkit-scrollbar-track {
      background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

@include scrollbars(0, slategray);

.fa{
  height: auto !important;
}

.sticky-container{
  position: -webkit-sticky;
  position: sticky;
  top: 0; 
}

//.tabs-content.carousel .carousel-item{ height: 100vh; overflow-x:hidden; overflow-y: scroll; } .tabs-content.carousel .carousel-item { width: 100%; height: 100vh; }

.tabs-content.carousel .carousel-item {
  height: 100vh !important;
  overflow-y: scroll;
}
.carousel-height{
  .carousel{
    height: 100vh !important;
  }
}